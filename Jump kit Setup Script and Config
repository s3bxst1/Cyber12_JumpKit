#!/bin/bash

# Jump Kit Setup Script
# This script initializes the Docker-based incident response environment

set -e

echo "Setting up Small Business Jump Kit..."

# Create necessary directories
mkdir -p {pihole/{etc-pihole,etc-dnsmasq.d},web,files,postgres_data,logs,mattermost/{config,data,logs},graylog/data,backups,data,scripts,scan_results}

# Create nginx configuration
cat > nginx.conf << 'EOF'
events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    server {
        listen 80;
        server_name localhost;
        
        location / {
            root /usr/share/nginx/html;
            index index.html;
        }
        
        location /docs {
            alias /usr/share/nginx/html/docs;
            autoindex on;
        }
        
        location /tools {
            alias /usr/share/nginx/html/tools;
            autoindex on;
        }
    }
}
EOF

# Create database initialization script
cat > init.sql << 'EOF'
-- Incident Response Database Schema
CREATE TABLE IF NOT EXISTS incidents (
    id SERIAL PRIMARY KEY,
    incident_id VARCHAR(50) UNIQUE NOT NULL,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    severity VARCHAR(20) DEFAULT 'medium',
    status VARCHAR(20) DEFAULT 'open',
    assigned_to VARCHAR(100),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS evidence (
    id SERIAL PRIMARY KEY,
    incident_id VARCHAR(50) REFERENCES incidents(incident_id),
    evidence_type VARCHAR(50),
    file_path VARCHAR(255),
    hash_sha256 VARCHAR(64),
    collected_by VARCHAR(100),
    collected_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    description TEXT
);

CREATE TABLE IF NOT EXISTS timeline (
    id SERIAL PRIMARY KEY,
    incident_id VARCHAR(50) REFERENCES incidents(incident_id),
    timestamp TIMESTAMP NOT NULL,
    event_type VARCHAR(50),
    description TEXT,
    source VARCHAR(100),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS contacts (
    id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    role VARCHAR(50),
    email VARCHAR(100),
    phone VARCHAR(20),
    organization VARCHAR(100),
    contact_type VARCHAR(30) -- internal, external, vendor, legal
);

-- Insert default emergency contacts
INSERT INTO contacts (name, role, email, phone, organization, contact_type) VALUES 
('IT Emergency', 'System Administrator', 'it-emergency@company.com', '+1-555-0100', 'Internal IT', 'internal'),
('Legal Counsel', 'Attorney', 'legal@company.com', '+1-555-0200', 'Legal Department', 'internal'),
('Insurance Provider', 'Cyber Insurance', 'claims@cyberinsurance.com', '+1-555-0300', 'Cyber Insurance Co', 'external'),
('FBI IC3', 'Law Enforcement', 'ic3@fbi.gov', '+1-855-292-3937', 'FBI', 'external');

-- Create user for web application access
CREATE USER web_user WITH PASSWORD 'web_access_2024';
GRANT SELECT, INSERT, UPDATE ON ALL TABLES IN SCHEMA public TO web_user;
GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA public TO web_user;
EOF

# Create file browser configuration
cat > filebrowser.json << 'EOF'
{
  "port": 80,
  "baseURL": "",
  "address": "",
  "log": "stdout",
  "database": "/database/filebrowser.db",
  "root": "/srv",
  "username": "responder",
  "password": "$2a$10$0DVXr1kgZUGWL2jPxkXoF.YKH6hqDPQCFXQCFOh4KGPRzqTmLIiCi"
}
EOF

# Create web content
cat > web/index.html << 'EOF'
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Incident Response Jump Kit</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background: #f5f5f5; }
        .container { max-width: 1200px; margin: 0 auto; background: white; padding: 30px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
        h1 { color: #c41e3a; text-align: center; margin-bottom: 30px; }
        .services { display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 20px; margin-top: 30px; }
        .service { background: #f8f9fa; padding: 20px; border-radius: 8px; border-left: 4px solid #007bff; }
        .service h3 { color: #007bff; margin-top: 0; }
        .service a { color: #007bff; text-decoration: none; font-weight: bold; }
        .service a:hover { text-decoration: underline; }
        .emergency { background: #fff3cd; border-left-color: #ffc107; padding: 20px; margin-bottom: 20px; border-radius: 8px; }
        .emergency h2 { color: #856404; margin-top: 0; }
        .status { background: #d4edda; padding: 15px; border-radius: 8px; margin-bottom: 20px; }
        .status h3 { color: #155724; margin-top: 0; }
    </style>
</head>
<body>
    <div class="container">
        <h1>Incident Response Jump Kit</h1>
        
        <div class="emergency">
            <h2>Emergency Contacts</h2>
            <p><strong>IT Emergency:</strong> +1-555-0100 | it-emergency@company.com</p>
            <p><strong>Legal Counsel:</strong> +1-555-0200 | legal@company.com</p>
            <p><strong>Cyber Insurance:</strong> +1-555-0300 | claims@cyberinsurance.com</p>
            <p><strong>FBI IC3:</strong> +1-855-292-3937 | ic3.gov</p>
        </div>

        <div class="status">
            <h3>System Status: Jump Kit Active</h3>
            <p>All incident response services are running and ready for deployment.</p>
        </div>

        <div class="services">
            <div class="service">
                <h3>Incident Management</h3>
                <p>Coordinate response efforts and track incident progress.</p>
                <a href="http://localhost:8082" target="_blank">Open Chat Server →</a>
            </div>

            <div class="service">
                <h3>Secure File Sharing</h3>
                <p>Share evidence and documentation securely within the team.</p>
                <a href="http://localhost:8081" target="_blank">Open File Server →</a>
            </div>

            <div class="service">
                <h3>Log Analysis</h3>
                <p>Aggregate and analyze system logs for incident investigation.</p>
                <a href="http://localhost:9000" target="_blank">Open Log Server →</a>
            </div>

            <div class="service">
                <h3>DNS Control</h3>
                <p>Monitor and control DNS traffic for network isolation.</p>
                <a href="http://localhost:8080" target="_blank">Open DNS Admin →</a>
            </div>

            <div class="service">
                <h3>Documentation</h3>
                <p>Access incident response playbooks and procedures.</p>
                <a href="/docs" target="_blank">View Documentation →</a>
            </div>

            <div class="service">
                <h3>Response Tools</h3>
                <p>Network analysis and security scanning utilities.</p>
                <a href="/tools" target="_blank">Access Tools →</a>
            </div>
        </div>

        <div style="margin-top: 40px; text-align: center; color: #666;">
            <p>This jump kit provides isolated infrastructure for incident response operations.</p>
            <p>For support, contact the IT Emergency line above.</p>
        </div>
    </div>
</body>
</html>
EOF

# Create documentation directory structure
mkdir -p web/docs
cat > web/docs/index.html << 'EOF'
<!DOCTYPE html>
<html>
<head>
    <title>Incident Response Documentation</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 40px; }
        .doc-link { display: block; padding: 10px; margin: 10px 0; background: #f0f0f0; border-radius: 5px; text-decoration: none; color: #333; }
        .doc-link:hover { background: #e0e0e0; }
    </style>
</head>
<body>
    <h1>Incident Response Documentation</h1>
    <a href="playbook.html" class="doc-link">Incident Response Playbook</a>
    <a href="contacts.html" class="doc-link">Emergency Contacts</a>
    <a href="procedures.html" class="doc-link">Standard Procedures</a>
    <a href="legal.html" class="doc-link">Legal Requirements</a>
    <a href="recovery.html" class="doc-link">Recovery Procedures</a>
</body>
</html>
EOF

# Create backup script
cat > scripts/backup.sh << 'EOF'
#!/bin/bash

# Automated backup script for incident response data
BACKUP_DIR="/backups"
DATA_DIR="/data"
TIMESTAMP=$(date +%Y%m%d_%H%M%S)

echo "Starting backup at $(date)"

# Create backup directory
mkdir -p "$BACKUP_DIR/$TIMESTAMP"

# Backup database
docker exec jumpkit_db pg_dump -U responder incident_response > "$BACKUP_DIR/$TIMESTAMP/database_backup.sql"

# Backup evidence files
tar -czf "$BACKUP_DIR/$TIMESTAMP/evidence_files.tar.gz" -C "$DATA_DIR" . 2>/dev/null || echo "No evidence files found"

# Backup logs
tar -czf "$BACKUP_DIR/$TIMESTAMP/logs.tar.gz" -C /logs . 2>/dev/null || echo "No logs found"

# Generate manifest
cat > "$BACKUP_DIR/$TIMESTAMP/manifest.txt" << EOL
Backup created: $(date)
Database: database_backup.sql
Evidence: evidence_files.tar.gz
Logs: logs.tar.gz
EOL

echo "Backup completed at $(date)"
EOF

chmod +x scripts/backup.sh

# Create quick start script
cat > start_jumpkit.sh << 'EOF'
#!/bin/bash

echo "Starting Jump Kit infrastructure..."

# Pull latest images
docker-compose pull

# Start services
docker-compose up -d

echo "Waiting for services to initialize..."
sleep 30

# Check service status
echo "Service Status:"
docker-compose ps

echo ""
echo "Jump Kit is ready!"
echo "Main Dashboard: http://localhost:8000"
echo "Chat Server: http://localhost:8082"
echo "File Server: http://localhost:8081"
echo "Log Server: http://localhost:9000"
echo " DNS Admin: http://localhost:8080"
echo ""
echo "Default credentials:"
echo "  File Server: responder / responder"
echo "  DNS Admin: admin / jumpkit2024!"
echo "  Log Server: admin / admin"
EOF

chmod +x start_jumpkit.sh

echo "Jump Kit setup complete!"
echo ""
echo "To start the infrastructure:"
echo "  ./start_jumpkit.sh"
echo ""
echo "To stop the infrastructure:"
echo "  docker-compose down"
echo ""
echo "Main dashboard will be available at: http://localhost:8000"
